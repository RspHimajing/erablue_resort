;Ver0.056と旧バージョンとの互換のための処理
;Ver0.059にしたとき消す、互換を57に

;追加TALENT、追加CSTRのチェック
@VERUP_56_CHARA(ARG)

;その他広域変数の書き換えなど
@VERUP_56()
#DIM ループ用

; IF なんらかフォロー == 0
; 	;なんらかのフォロー処理
; 	;ここで"なんらかフォロー = 1"しない
; ENDIF

IF 朔望鑑定術フォロー == 0
	IF あなた特殊能力:4 > 0
		あなた特殊能力:朔望鑑定術 = 2
	ELSEIF あなた特殊能力:3 > 0
		あなた特殊能力:朔望鑑定術 = 1
	ELSE
		あなた特殊能力:朔望鑑定術 = 0
	ENDIF
	あなた特殊能力:3 = 0
ENDIF

IF 修道服フォロー == 0
	SIF 居住区二丁目初来訪イベントフラグ
		CALL 制服登録処理("修道服")
ENDIF

IF ランダムキャラ初期値記録データベースフォロー == 0
	SIF DT_EXIST(Ｒキャラ初期値記録)
		DT_RELEASE Ｒキャラ初期値記録
	CALL ランダムキャラデータベースセット(Ｒキャラ初期値記録)
	FOR ループ用, 0, 従業員初期値最大記録数
		SIF 従業員初期値記録:ループ用 != ""
			CALL 従業員初期値記録_移行(ループ用)
	NEXT
ENDIF


;対応処理用フラグを対応済状態にセット
@VERUP_56_FINISH()
; なんらかフォロー = 1
朔望鑑定術フォロー = 1
修道服フォロー = 1
ランダムキャラ初期値記録データベースフォロー = 1






;-------------------------------------------------------------------------------------------
; 以下、利便性のために切り出した関数
;-------------------------------------------------------------------------------------------
@従業員初期値記録_移行(記録位置)
#DIM 記録位置
#DIMS 大分割文字列, 10
#DIMS 小分割文字列, 1000
#DIM ループ用
#DIM キャラ番号
#DIM 管理番号

VARSET 大分割文字列
VARSET 小分割文字列
SPLIT 従業員初期値記録:記録位置, "^^^", 大分割文字列

;キャラ番号 -> 管理番号
SPLIT 大分割文字列:0, "_", 小分割文字列
キャラ番号 = TOINT(小分割文字列:1)
CALL ランダムキャラデータ_NEW(, CFLAG:キャラ番号:人物番号)
管理番号 = RESULT

;名前・呼び名
VARSET 小分割文字列
SPLIT 大分割文字列:1, "_", 小分割文字列
CALL ランダムキャラデータ_SETS(, 管理番号, "呼び名", , 小分割文字列:1)
IF CALLNAME:キャラ番号 == 小分割文字列:1
	CALL ランダムキャラデータ_SETS(, 管理番号, "名前", , NAME:キャラ番号)
ELSE
	CALL ランダムキャラデータ_SETS(, 管理番号, "名前", , @"[一般人]%小分割文字列:1%")
ENDIF

;素質
VARSET 小分割文字列
SPLIT 大分割文字列:2, "_", 小分割文字列
FOR ループ用, 0, 900, 3
	SIF 小分割文字列:ループ用 == ""
		BREAK
	CALL ランダムキャラデータ_SET(, 管理番号, "素質", TOINT(小分割文字列:(ループ用 + 1)), TOINT(小分割文字列:(ループ用 + 2)))
NEXT

;フレーバー素質
VARSET 小分割文字列
SPLIT 大分割文字列:3, "_", 小分割文字列
FOR ループ用, 0, 30, 3
	SIF 小分割文字列:ループ用 == ""
		BREAK
	CALL ランダムキャラデータ_SET(, 管理番号, "フレーバー素質", TOINT(小分割文字列:(ループ用 + 1)), TOINT(小分割文字列:(ループ用 + 2)))
NEXT

;ABL -> 能力
VARSET 小分割文字列
SPLIT 大分割文字列:4, "_", 小分割文字列
FOR ループ用, 0, 150, 3
	SIF 小分割文字列:ループ用 == ""
		BREAK
	CALL ランダムキャラデータ_SET(, 管理番号, "能力", TOINT(小分割文字列:(ループ用 + 1)), TOINT(小分割文字列:(ループ用 + 2)))
NEXT

;EXP -> 経験
VARSET 小分割文字列
SPLIT 大分割文字列:5, "_", 小分割文字列
FOR ループ用, 0, 300, 3
	SIF 小分割文字列:ループ用 == ""
		BREAK
	CALL ランダムキャラデータ_SET(, 管理番号, "経験", TOINT(小分割文字列:(ループ用 + 1)), TOINT(小分割文字列:(ループ用 + 2)))
NEXT

;戦闘系・性知識
VARSET 小分割文字列
SPLIT 大分割文字列:6, "_", 小分割文字列
CALL ランダムキャラデータ_SET(, 管理番号, "基礎BATTLE_STATE", GETNUM(基礎BATTLE_STATE, "属性"), TOINT(小分割文字列:1))
;得意武器はBITに切り替えたアップデートに壊れているため、最新のデータで上書きする
CALL ランダムキャラデータ_SET(, 管理番号, "基礎BATTLE_STATE", GETNUM(基礎BATTLE_STATE, "得意武器"), 基礎BATTLE_STATE:キャラ番号:得意武器)
CALL ランダムキャラデータ_SET(, 管理番号, "基礎BATTLE_STATE", GETNUM(基礎BATTLE_STATE, "ステータスタイプ保存"), TOINT(小分割文字列:5))
CALL ランダムキャラデータ_SET(, 管理番号, "知識素質", GETNUM(知識素質, "性知識"), TOINT(小分割文字列:7))

;汎用立ち絵登録文字列（追加）
SIF CSTR:キャラ番号:汎用立ち絵登録文字列 != ""
	CALL ランダムキャラデータ_SETS(, 管理番号, "CSTR", GETNUM(CSTR, "汎用立ち絵登録文字列"), CSTR:キャラ番号:汎用立ち絵登録文字列)
