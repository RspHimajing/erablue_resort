@TURNEND_CHARAEVENT_25
#DIM キャラ番号
;コマンド実行直後に毎回呼ばれる処理
;タイミングは実行したコマンドが履歴に保存され、次のオートコマンドの発動判定が終わった後
;コマンド用変数がリセットされる前

;特定の条件を満たした時にパラメータを変化させる場合に使用する
;TARGETの分しか呼ばれないので注意

キャラ番号 = GETCHARA(25)

@DAYFIRST_CHARAEVENT_25
#DIM キャラ番号
;一日開始時に呼ばれる処理
;タイミングは滞在期間チェック後、衣装設定やムード・怒りなどのリセット前

;特定の条件を満たした時に行う処理を入れる
;全員分（島にいなくても）呼ばれる

キャラ番号 = GETCHARA(25)

;ZPショップでの肉体素質変動を検出
LOCAL = 0
IF 特定状況口上用フラグ:キャラ番号:19
	特定状況口上用フラグ:キャラ番号:19 = 0
	IF 特定状況口上用フラグ:キャラ番号:1 != TALENT:キャラ番号:性別
		LOCAL += 30
	ENDIF
	IF 特定状況口上用フラグ:キャラ番号:2 != TALENT:キャラ番号:種族
		LOCAL += 200
	ENDIF
	IF 特定状況口上用フラグ:キャラ番号:4 != TALENT:キャラ番号:バストサイズ
		SIF !LOCAL
			LOCAL += 20 * ABS(TALENT:キャラ番号:バストサイズ - 特定状況口上用フラグ:キャラ番号:4)
	ENDIF
	IF 特定状況口上用フラグ:キャラ番号:7 != TALENT:キャラ番号:男性器サイズ
		SIF !LOCAL
			LOCAL += 20 * ABS(TALENT:キャラ番号:男性器サイズ - 特定状況口上用フラグ:キャラ番号:7)
	ENDIF
	IF 特定状況口上用フラグ:キャラ番号:3 != TALENT:キャラ番号:体格 || 特定状況口上用フラグ:キャラ番号:5 != TALENT:キャラ番号:体型 || 特定状況口上用フラグ:キャラ番号:6 != TALENT:キャラ番号:下半身 || 特定状況口上用フラグ:キャラ番号:11 != BASE:キャラ番号:身長
		LOCAL += 60
	ENDIF

	;陥落済みでない場合、ZPショップでのバスト・性別・種族・体格・体型・下半身の変動をリセット
	IF !陥落チェック_性的(キャラ番号)
		TALENT:キャラ番号:性転換 = 2
		TALENT:キャラ番号:性別 = 特定状況口上用フラグ:キャラ番号:1 
		TALENT:キャラ番号:種族 = 特定状況口上用フラグ:キャラ番号:2 
		TALENT:キャラ番号:体格 = 特定状況口上用フラグ:キャラ番号:3 
		TALENT:キャラ番号:バストサイズ = 特定状況口上用フラグ:キャラ番号:4 
		TALENT:キャラ番号:体型 = 特定状況口上用フラグ:キャラ番号:5 
		TALENT:キャラ番号:下半身 = 特定状況口上用フラグ:キャラ番号:6 
		TALENT:キャラ番号:男性器サイズ = 特定状況口上用フラグ:キャラ番号:7 
		BASE:キャラ番号:身長 = 特定状況口上用フラグ:キャラ番号:11
		BASE:キャラ番号:バスト = 特定状況口上用フラグ:キャラ番号:12
		BASE:キャラ番号:ウエスト = 特定状況口上用フラグ:キャラ番号:13
		BASE:キャラ番号:ヒップ = 特定状況口上用フラグ:キャラ番号:14
		MAXBASE:キャラ番号:身長 = BASE:キャラ番号:身長
		MAXBASE:キャラ番号:バスト = BASE:キャラ番号:バスト
		MAXBASE:キャラ番号:ウエスト = BASE:キャラ番号:ウエスト
		MAXBASE:キャラ番号:ヒップ = BASE:キャラ番号:ヒップ
		TALENT:キャラ番号:角あり = 0
		TALENT:キャラ番号:尻尾あり = 0
		TALENT:キャラ番号:エルーン耳 = 0
		TALENT:キャラ番号:ハーヴィン耳 = 0
	ELSEIF TALENT:キャラ番号:種族 == 種族_ヒューマン && TALENT:キャラ番号:体格 >= 体格_普通 && TALENT:キャラ番号:バストサイズ >= バストサイズ_巨乳
		;肉体条件を満たした場合、大人スタイルへ変更
		IF CSTR:キャラ番号:スタイル管理文字列 != "[天才美人錬金術師]カリオストロ"
			CSTR:キャラ番号:スタイル管理文字列 '= "[天才美人錬金術師]カリオストロ"
			CALL スタイル変更_25(キャラ番号, "変更後処理", 1)
		ENDIF
	ELSEIF CSTR:キャラ番号:スタイル管理文字列 != ""
		;他のスタイルの条件を満たさない場合、デフォルトスタイルへ変更
		CSTR:キャラ番号:スタイル管理文字列 '= ""
		CALL スタイル変更_25(キャラ番号, "変更後処理", 1)
	ENDIF
	IF LOCAL && 特定状況口上用フラグ:キャラ番号:0 >= 0
		特定状況口上用フラグ:キャラ番号:0 ++
		特定状況口上用フラグ:キャラ番号:19 = 1 + (LOCAL / (1 + 特定状況口上用フラグ:キャラ番号:0))
	ELSEIF LOCAL
		特定状況口上用フラグ:キャラ番号:19 = 1
	ENDIF
ENDIF

;陥落済みの場合、飽きられないように内部構造を自発的に変動させる
IF 陥落チェック_性的(キャラ番号)
	SIF CFLAG:キャラ番号:滞在期間 > 0 && GETBIT(TALENT:キャラ番号:性別, 0) && GETBIT(TALENT:MASTER:性別, 1) && !RAND:5
		フレーバー素質:キャラ番号:性器種類 = 1 + RAND:5
ENDIF
;イベント加筆まで封印
;IF TALENT:キャラ番号:恋慕
;	;恋慕かつ妊娠不可かつ累積膣内射精量が一致医療を超えると、自分で妊娠不可を解除する
;	IF TALENT:キャラ番号:妊娠不可 && 特定状況口上用フラグ:キャラ番号:40 > 50
;		特定状況口上用フラグ:キャラ番号:40 = -1
;		TALENT:キャラ番号:妊娠不可 = 0
;	ENDIF
;ENDIF

@TEST_DAYEND_CHARAEVENT_25
#FUNCTION
#DIM キャラ番号

キャラ番号 = GETCHARA(25)
特定状況口上用フラグ:キャラ番号:1 = TALENT:キャラ番号:性別
特定状況口上用フラグ:キャラ番号:2 = TALENT:キャラ番号:種族
特定状況口上用フラグ:キャラ番号:3 = TALENT:キャラ番号:体格
特定状況口上用フラグ:キャラ番号:4 = TALENT:キャラ番号:バストサイズ
特定状況口上用フラグ:キャラ番号:5 = TALENT:キャラ番号:体型
特定状況口上用フラグ:キャラ番号:6 = TALENT:キャラ番号:下半身
特定状況口上用フラグ:キャラ番号:7 = TALENT:キャラ番号:男性器サイズ
特定状況口上用フラグ:キャラ番号:11 = BASE:キャラ番号:身長
特定状況口上用フラグ:キャラ番号:12 = BASE:キャラ番号:バスト
特定状況口上用フラグ:キャラ番号:13 = BASE:キャラ番号:ウエスト
特定状況口上用フラグ:キャラ番号:14 = BASE:キャラ番号:ヒップ
特定状況口上用フラグ:キャラ番号:19 = 1

@DAYEND_CHARAEVENT_25
#DIM キャラ番号
;一日終了時に呼ばれる処理
;タイミングはリゾートの人気変動の後

;特定の条件を満たした時に行う処理を入れる
;全員分（島にいなくても）呼ばれる

キャラ番号 = GETCHARA(25)

;バスト・性別・種族を保存
特定状況口上用フラグ:キャラ番号:1 = TALENT:キャラ番号:性別
特定状況口上用フラグ:キャラ番号:2 = TALENT:キャラ番号:種族
特定状況口上用フラグ:キャラ番号:3 = TALENT:キャラ番号:体格
特定状況口上用フラグ:キャラ番号:4 = TALENT:キャラ番号:バストサイズ
特定状況口上用フラグ:キャラ番号:5 = TALENT:キャラ番号:体型
特定状況口上用フラグ:キャラ番号:6 = TALENT:キャラ番号:下半身
特定状況口上用フラグ:キャラ番号:7 = TALENT:キャラ番号:男性器サイズ
特定状況口上用フラグ:キャラ番号:8 = BASE:キャラ番号:身長
特定状況口上用フラグ:キャラ番号:9 = BASE:キャラ番号:バスト
特定状況口上用フラグ:キャラ番号:10 = BASE:キャラ番号:ウエスト
特定状況口上用フラグ:キャラ番号:11 = BASE:キャラ番号:ヒップ
特定状況口上用フラグ:キャラ番号:19 = 1

@PALAMUP_CHARAEVENT_25(PALAM種類変数, 変化量)
#DIM キャラ番号
#DIM PALAM種類変数
#DIM 変化量
;PALAMが変化した直後に飛んでくる処理
;より正確に言えばSOURCE_CALC_系関数から飛んでくるので、直接PALAMをいじっても飛んで来ない

キャラ番号 = GETCHARA(25)

CFLAG:キャラ番号:キャラ固有好感度 = 知識素質:MASTER:錬金知識*(知識素質:MASTER:錬金知識*5000 + 知識素質:MASTER:調合知識*1000) + (知識素質:MASTER:錬金知識経験値 + 知識素質:MASTER:調合知識経験値)
;知識素質0→1→2→3　必要経験0→100→1000→10000
;関係閾値0→10→20→50→80　必要値0→5000→10000→32500→62500

@好感度要素_友情度上昇反応_CHARAEVENT_25(LOCAL)
#DIM キャラ番号
;増加する要素の量が決定し、実際に増加する直前に呼ばれる関数
;特定の要素を増加させたり減少させたりする目的で使用する

キャラ番号 = GETCHARA(25)
RETURN LOCAL

@好感度要素_信頼度上昇反応_CHARAEVENT_25(LOCAL)
#DIM キャラ番号
;増加する要素の量が決定し、実際に増加する直前に呼ばれる関数
;特定の要素を増加させたり減少させたりする目的で使用する

キャラ番号 = GETCHARA(25)
RETURN LOCAL

@好感度要素_恋心度上昇反応_CHARAEVENT_25(LOCAL)
#DIM キャラ番号
;増加する要素の量が決定し、実際に増加する直前に呼ばれる関数
;特定の要素を増加させたり減少させたりする目的で使用する

キャラ番号 = GETCHARA(25)
RETURN LOCAL

@好感度要素_性愛度上昇反応_CHARAEVENT_25(LOCAL)
#DIM キャラ番号
;増加する要素の量が決定し、実際に増加する直前に呼ばれる関数
;特定の要素を増加させたり減少させたりする目的で使用する

キャラ番号 = GETCHARA(25)
RETURN LOCAL

@恋慕度上昇反応_CHARAEVENT_25(LOCAL)
#DIM キャラ番号
;増加する要素の量が決定し、実際に増加する直前に呼ばれる関数
;特定の要素を増加させたり減少させたりする目的で使用する

キャラ番号 = GETCHARA(25)
RETURN LOCAL


@プレゼント特殊反応_CHARAEVENT_25(プレゼント名)
#DIM キャラ番号
#DIMS プレゼント名
;プレゼントが特定のアイテムだった場合に反応する関数

キャラ番号 = GETCHARA(25)

IF プレゼント名 == "任意のプレゼントアイテム名"
	;ここにプレゼントをもらった時の処理を描く

	; CALL SOURCE_CALC_歓楽(TARGET, PLAYER, 任意の数値)
	; CALL SOURCE_CALC_征服(TARGET, PLAYER, 任意の数値)
	; CALL SOURCE_CALC_接触(TARGET, PLAYER, 任意の数値)
	; CALL SOURCE_CALC_好感度要素_友情度UP(TARGET, PLAYER, 任意の数値)
	; CALL SOURCE_CALC_好感度要素_恋心度UP(TARGET, PLAYER, 任意の数値)
	;が基本。もらった時の口上はここではなく、口上_キャラ名_コマンド実行時.ERBの@KOJO_COM_25_314で行うこと

	;RFLAG:コマンド結果受渡し変数２にアイテムのランクが入っている。ランクは現状０～５

	;何が特殊反応した場合は１を返すこと
	RETURN 1
ENDIF

;何も特殊反応がない場合は０を返すこと
RETURN 0



