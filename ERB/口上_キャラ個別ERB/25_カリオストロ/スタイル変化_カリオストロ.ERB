;****************************************
;スタイル変更系の処理に使う特殊関数
;****************************************
;・使い方
;「25」をキャラクター番号に置換し、それぞれの関数に処理を入れる
;「[天才美人錬金術師]カリオストロ」を任意のスタイル名に変更する
;****************************************

;--------------------------------------------------
;スタイル変更基礎関数
;ARG = 1:肉体再錬成コマンドからの呼び出し 2:ZPショップでの素質変化による起床時処理からの呼び出し
;--------------------------------------------------
@スタイル変更_25(対象キャラ, 動作モード, ARG=0)
#DIM 対象キャラ
#DIMS 動作モード

;この関数はいくつ別スタイル作ってもキャラ毎に一個
;必須関数、スタイル変更を追加する場合、必ず作成すること

SELECTCASE 動作モード
	CASE "スタイル名取得"
        ;ここは触らない
		VARSET RESULTS
		RESULTS:0 = %NAME:対象キャラ%
		RESULTS:10 = ノーマル

		;RESULTS:Xに名前全体を、RESULTS:X+10にリミテッドや水着など通称(？)を入れる
        ;例：
		; RESULTS:1 = [強化状態二つ名]テスト太郎
		; RESULTS:11 = 強化スタイル
		RESULTS:1 = [天才美人錬金術師]カリオストロ
		RESULTS:11 = 大人
        
		; 複数スタイルを作りたい場合はRESULTS:2、RESULTS:12のように数字をふやしていく
        
	CASE @"スタイル解説_%NAME:対象キャラ%"
		TSTR:スタイル解説 = 
		TSTR:スタイル解説 += @"■%NAME:対象キャラ%<br>"
		TSTR:スタイル解説 += "<br>"
		TSTR:スタイル解説 += "カリオストロ自身が世界で一番カワイイ☆と自負している姿。<br>"
		TSTR:スタイル解説 += "身長130cmの愛らしい容姿は庇護欲をそそられる、まさに美少女ではある……外見だけは。<br>"
		TSTR:スタイル解説 += "肉体再錬成やZPショップにて、キャラ素質を変化させた際に<br>"
		TSTR:スタイル解説 += "特定条件から逸脱した場合にも、こちらに変化する<br>"
		TSTR:スタイル解説 += "<br>"
        ;このCALLはそのままで良い
		CALL スタイル奥義アビ表示_汎用文章(対象キャラ, NAME:対象キャラ)
	CASE "スタイル解説_[天才美人錬金術師]カリオストロ"
		TSTR:スタイル解説 = 
		TSTR:スタイル解説 += "■[天才美人錬金術師]カリオストロ<br>"
		TSTR:スタイル解説 += "<br>"
		TSTR:スタイル解説 += "カリオストロが年長者としての自覚と自意識から作り上げた姿。<br>"
		TSTR:スタイル解説 += "成長したその容姿は、大人びた艶気を醸しつつも本来の可愛らしさも保持している。<br>"
		TSTR:スタイル解説 += "肉体再錬成やZPショップにて、キャラ素質を変化させた際に<br>"
		TSTR:スタイル解説 += "「種族：ヒューマン」かつ「体格：普通」以上「バスト：巨乳」以上に設定した場合にも、こちらに変化する<br>"
		TSTR:スタイル解説 += "<br>"
        ;このCALLはそのままで良い、戦闘アビが変動しない場合は消しても良い
		CALL スタイル奥義アビ表示_汎用文章(対象キャラ, "[天才美人錬金術師]カリオストロ")
	CASE "変更後処理"
		;CSTR:対象キャラ:スタイル管理文字列をキーにして処理を実行
		;一人称や二人称、素質の変化などの調教側ステータスの変更を想定
        ;戦闘ステータスは別の関数
		SELECTCASE CSTR:対象キャラ:スタイル管理文字列
			CASE ""
                ;通常時に戻す処理
				IF ARG == 0
					TALENT:対象キャラ:バストサイズ = 特定状況口上用フラグ:対象キャラ:11
					BASE:対象キャラ:身長 = 特定状況口上用フラグ:対象キャラ:12
					MAXBASE:対象キャラ:身長 = 特定状況口上用フラグ:対象キャラ:12
					BASE:対象キャラ:バスト = 特定状況口上用フラグ:対象キャラ:13
					MAXBASE:対象キャラ:バスト = 特定状況口上用フラグ:対象キャラ:13
					TALENT:対象キャラ:体格 = 特定状況口上用フラグ:対象キャラ:14
					TALENT:対象キャラ:種族 = 特定状況口上用フラグ:対象キャラ:15
				ENDIF
				CSTR:対象キャラ:フォルダ判定キー '= CALLNAME:対象キャラ
				SWAP CSTR:対象キャラ:画像フォルダ, CSTR:対象キャラ:スタイル変更前画像フォルダ
				SIF !HAS_RESOURCES(対象キャラ, 0)
					CSTR:対象キャラ:画像フォルダ '= GET_RESOURCES_BASE_FOLDER(対象キャラ)

			CASE "[天才美人錬金術師]カリオストロ"
                ;スタイル変更時の処理
				IF ARG == 0
					;前傾姿勢で並んだ時、直立姿勢のクラリスより少し高いくらいだったので、160cmくらい？
					特定状況口上用フラグ:対象キャラ:11 = TALENT:対象キャラ:バストサイズ
					特定状況口上用フラグ:対象キャラ:12 = BASE:対象キャラ:身長
					特定状況口上用フラグ:対象キャラ:13 = BASE:対象キャラ:バスト
					特定状況口上用フラグ:対象キャラ:14 = TALENT:対象キャラ:体格
					特定状況口上用フラグ:対象キャラ:15 = TALENT:対象キャラ:種族
					TALENT:対象キャラ:バストサイズ = バストサイズ_巨乳
					BASE:対象キャラ:身長 = 1595
					MAXBASE:対象キャラ:身長 = 1595
					TALENT:対象キャラ:体格 = 体格_普通
					TALENT:対象キャラ:種族 = 種族_ヒューマン
					CALL SET_BODYSIZE_BUST(対象キャラ)
				ENDIF
				CSTR:対象キャラ:フォルダ判定キー '= "大人" + CALLNAME:対象キャラ
				SWAP CSTR:対象キャラ:画像フォルダ, CSTR:対象キャラ:スタイル変更前画像フォルダ
				SIF !HAS_RESOURCES(対象キャラ, 0)
					CSTR:対象キャラ:画像フォルダ '= GET_RESOURCES_BASE_FOLDER(対象キャラ)
		ENDSELECT
ENDSELECT

[SKIPSTART]
;--------------------------------------------------
;スタイル変更時、戦闘ステータス変動
;--------------------------------------------------
@スタイルステータス補正_<スタイル二つ名>_<キャラ名>(対象キャラ)
#DIM 対象キャラ
;関数名に[]が使えないため、しょうがなく[]排除時の文字列をキーに
;例えば[強化状態二つ名]テスト太郎というスタイルなら、
;@スタイルステータス補正_強化状態二つ名_テスト太郎　という関数名にすること

;属性の変更、火とか水とか文字を変えるだけでOK
装備ステータス補正保存:対象キャラ:基礎属性変更 = 属性文字列数値変換("風") + 10
;ステータスの変更
装備ステータス補正保存:対象キャラ:攻撃力 += 100

;装備再計算時にこの関数は呼ばれる
;補正の順番は「スタイル＞指輪＞耳飾り＞料理など＞パーティキャラ補正」
;補正可能なステータスは「装備ステータス補正保存.ERD」を参照のこと


;--------------------------------------------------
;スタイル変更時、使用可能アビリティの変動
;--------------------------------------------------
;テンプレート「固有アビリティ_キャラ名.ERB」に記述する
;「@固有アビ_25_任意の文字列(ARGS, 対象キャラ)」の上部にある分岐を修正する

; IF スタイル判定関数(対象キャラ, "デフォルト") == 0
; を以下のように修正
; IF スタイル判定関数(対象キャラ, "[天才美人錬金術師]カリオストロ") == 0

;こうすることで、そのアビは[天才美人錬金術師]カリオストロになっている時のみ使用可能という意味になる


;--------------------------------------------------
;スタイル変更時、使用可能奥義の変動
;--------------------------------------------------
;奥義はアビのように複数種類を使うことを想定していないため、別関数を呼ぶことを推奨。
;奥義テンプレにある以下の分岐のうち、任意のスタイル名の部分を編集した上で
;奥義テンプレをコピーして作成した関数に貼り付け、中身を記述する。

; IF CSTR:対象キャラ:スタイル管理文字列 == "任意のスタイル名"
; 	CALL 任意のスタイル名固有奥義(ARGS, 対象キャラ)
; 	RETURN RESULT
; ENDIF
[SKIPEND]